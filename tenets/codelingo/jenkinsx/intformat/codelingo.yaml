funcs:
  - name: doesNotMatch
    type: asserter
    body: |
      function (reg, str) {
        return !str.match(reg)
      }
  - name: doesMatch
    type: asserter
    body: |
      function (reg, str) {
        return str.match(reg)
      }
tenets:
  - name: build-directive-without-correct-pkgname-and-or-filename
    flows:
      codelingo/docs:
        body: |
          Integration tests that have the custom build directive `// +build integration`,
          must also belong to a file called `<package_name>_integration_test.go`, and a package called `<package_name>_test`.
      codelingo/review:
        comment: |
          build-directive-without-correct-pkgname-and-or-filename

          Integration tests that have the custom build directive `// +build integration`,
          must also belong to a file called `<package_name>_integration_test.go`, and a package called `<package_name>_test`.
    query: |
      import codelingo/ast/go

      @review comment
      go.file(depth = any):
        filename as fname
        go.comment_group:
          go.comment:
            text == "// +build integration"
        any_of:
          go.ident:
            name as packageName
            doesNotMatch(/test/, packageName)
          doesNotMatch(/_integration_test.go/, fname)
          
  - name: filename-without-pkgname
    flows:
      codelingo/docs:
        body: |
          Integration tests that are in a file <package_name>_integration_test.go`, 
          must also belong to a package called `<package_name>_test`.
      codelingo/review:
        comment: |
          filename-without-pkgname

          Integration tests that are in a file <package_name>_integration_test.go`, 
          must also belong to a package called `<package_name>_test`.
    query: |
      import codelingo/ast/go

      @review comment
      go.file(depth = any):
        filename as fname
        doesMatch(/_integration_test.go/, fname)
        go.ident:
          name as packageName
          doesNotMatch(/test/, packageName)

  - name: filename-without-build-directive
    flows:
      codelingo/docs:
        body: |
          Integration tests are in a file <package_name>_integration_test.go`, 
          must also have the custom build directive `// +build integration`.
      codelingo/review:
        comment: |
          filename-without-build-directive

          Integration tests are in a file <package_name>_integration_test.go`, 
          must also have the custom build directive `// +build integration`.
    query: |
      import codelingo/ast/go

      @review comment
      go.file(depth = any):
        filename as fname
        doesMatch(/_integration_test.go/, fname)
        exclude:
          go.comment_group:
            go.comment:
              text == "// +build integration"